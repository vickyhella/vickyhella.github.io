"use strict";(self.webpackChunkvickyhella_github_io=self.webpackChunkvickyhella_github_io||[]).push([[7543],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=i,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||r;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:i,o[1]=l;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7806:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return o},default:function(){return h},frontMatter:function(){return r},metadata:function(){return l},toc:function(){return u}});var a=n(3117),i=(n(7294),n(3905));const r={title:"Lesson 1: What is DITA",sidebar_position:1,tags:["DITA","Technical Writing","XML"]},o=void 0,l={unversionedId:"dita/what-is-dita",id:"dita/what-is-dita",title:"Lesson 1: What is DITA",description:"Markup languages",source:"@site/docs/dita/1-what-is-dita.md",sourceDirName:"dita",slug:"/dita/what-is-dita",permalink:"/docs/dita/what-is-dita",draft:!1,editUrl:"https://github.com/vickyhella/vickyhella.github.io/edit/main/docs/dita/1-what-is-dita.md",tags:[{label:"DITA",permalink:"/docs/tags/dita"},{label:"Technical Writing",permalink:"/docs/tags/technical-writing"},{label:"XML",permalink:"/docs/tags/xml"}],version:"current",lastUpdatedBy:"vickyhella",lastUpdatedAt:1690536626,formattedLastUpdatedAt:"Jul 28, 2023",sidebarPosition:1,frontMatter:{title:"Lesson 1: What is DITA",sidebar_position:1,tags:["DITA","Technical Writing","XML"]},sidebar:"tutorialSidebar",previous:{title:"Introduction to DITA",permalink:"/docs/dita/"},next:{title:"Lesson 2: DITA Topics",permalink:"/docs/dita/dita-topics"}},s={},u=[{value:"Markup languages",id:"markup-languages",level:2},{value:"DITA is structured authoring",id:"dita-is-structured-authoring",level:2},{value:"What is DITA topic?",id:"what-is-dita-topic",level:2}],c=(p="ColorText",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)});var p;const d={toc:u},m="wrapper";function h(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"markup-languages"},"Markup languages"),(0,i.kt)("p",null,"DITA is built on the XML markup language (similar to HTML). They both use ",(0,i.kt)("inlineCode",{parentName:"p"},"<")," and ",(0,i.kt)("inlineCode",{parentName:"p"},">")," to identify the markup tags (for example, ",(0,i.kt)("inlineCode",{parentName:"p"},"<title>")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"</title>"),")."),(0,i.kt)("p",null,"Besides, tags can also have attributes in the form of ",(0,i.kt)("inlineCode",{parentName:"p"},'attribute="value"'),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Comparing HTML and XML"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"HTML can be quite forgiving when you forget to close tags or put quotation marks around attribute values; XML is strict in requiring them."),(0,i.kt)("li",{parentName:"ul"},"HTML uses a predefined set of tags (",(0,i.kt)("inlineCode",{parentName:"li"},"<body>"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"<p>"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"<span>"),", and so on). In XML, the tags are ",(0,i.kt)("strong",{parentName:"li"},"defined in a separate file")," and can be changed and added to."),(0,i.kt)("li",{parentName:"ul"},"In HTML, the \u201croot\u201d tag is ",(0,i.kt)("inlineCode",{parentName:"li"},"<html>"),". In DITA, the name of the root tag depends on the type of topic you\u2019re creating, such as ",(0,i.kt)("inlineCode",{parentName:"li"},"<concept>"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"<task>"),", or ",(0,i.kt)("inlineCode",{parentName:"li"},"<reference>"),".")),(0,i.kt)("h2",{id:"dita-is-structured-authoring"},"DITA is structured authoring"),(0,i.kt)("p",null,"Structured authoring is a ",(0,i.kt)("strong",{parentName:"p"},"publishing workflow")," that lets you define and enforce consistent organization of information in documents."),(0,i.kt)("p",null,"The elements defined in DITA have a very specific hierarchy and relationships."),(0,i.kt)("h2",{id:"what-is-dita-topic"},"What is DITA topic?"),(0,i.kt)("p",null,"A DITA topic is the ",(0,i.kt)("strong",{parentName:"p"},"basic unit of authoring and reuse"),". Each topic can address a single idea or answers a single question. These topics can then be ",(0,i.kt)("strong",{parentName:"p"},"reused in any order")," you want."),(0,i.kt)("p",null,"All DITA topics must have at least a ",(0,i.kt)(c,{color:"blue",mdxType:"ColorText"},"title element and an id attribute for the root topic"),". A valid DITA topic looks like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<topic id="sample">\n\n   <title>Topic title goes here</title>\n\n</topic> \n')),(0,i.kt)("p",null,"To make your topics reusable:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A topic should address a single idea or answer a single question."),(0,i.kt)("li",{parentName:"ul"},"A topic should contain enough information to stand on its own."),(0,i.kt)("li",{parentName:"ul"},"A topic should not assume any context. You should not make assumptions about what comes before or after the topic."),(0,i.kt)("li",{parentName:"ul"},"A single file should contain a single topic.")))}h.isMDXComponent=!0}}]);