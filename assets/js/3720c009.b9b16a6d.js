"use strict";(self.webpackChunkvickyhella_github_io=self.webpackChunkvickyhella_github_io||[]).push([[3751],{727:function(e,t,a){a.r(t),a.d(t,{default:function(){return g}});var n=a(7294),l=a(4334),r=a(5155),c=a(833),s=a(5281),u=a(7452),i=a(6090),o=a(197);function g(e){let{tags:t}=e;const a=(0,r.M)();return n.createElement(c.FG,{className:(0,l.Z)(s.k.wrapper.docsPages,s.k.page.docsTagsListPage)},n.createElement(c.d,{title:a}),n.createElement(o.Z,{tag:"doc_tags_list"}),n.createElement(u.Z,null,n.createElement("div",{className:"container margin-vert--lg"},n.createElement("div",{className:"row"},n.createElement("main",{className:"col col--8 col--offset-2"},n.createElement("h1",null,a),n.createElement(i.Z,{tags:t}))))))}},3008:function(e,t,a){a.d(t,{Z:function(){return s}});var n=a(7294),l=a(4334),r=a(9960),c={tag:"tag_zVej",tagRegular:"tagRegular_sFm0",tagWithCount:"tagWithCount_h2kH"};function s(e){let{permalink:t,label:a,count:s}=e;return n.createElement(r.Z,{href:t,className:(0,l.Z)(c.tag,s?c.tagWithCount:c.tagRegular)},a,s&&n.createElement("span",null,s))}},6090:function(e,t,a){a.d(t,{Z:function(){return u}});var n=a(7294),l=a(5155),r=a(3008),c={tag:"tag_Nnez"};function s(e){let{letterEntry:t}=e;return n.createElement("article",null,n.createElement("h2",null,t.letter),n.createElement("ul",{className:"padding--none"},t.tags.map((e=>n.createElement("li",{key:e.permalink,className:c.tag},n.createElement(r.Z,e))))),n.createElement("hr",null))}function u(e){let{tags:t}=e;const a=(0,l.P)(t);return n.createElement("section",{className:"margin-vert--lg"},a.map((e=>n.createElement(s,{key:e.letter,letterEntry:e}))))}},5155:function(e,t,a){a.d(t,{M:function(){return l},P:function(){return r}});var n=a(5999);const l=()=>(0,n.I)({id:"theme.tags.tagsPageTitle",message:"Tags",description:"The title of the tag list page"});function r(e){const t={};return Object.values(e).forEach((e=>{const a=function(e){return e[0].toUpperCase()}(e.label);t[a]??=[],t[a].push(e)})),Object.entries(t).sort(((e,t)=>{let[a]=e,[n]=t;return a.localeCompare(n)})).map((e=>{let[t,a]=e;return{letter:t,tags:a.sort(((e,t)=>e.label.localeCompare(t.label)))}}))}}}]);