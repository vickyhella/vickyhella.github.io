"use strict";(self.webpackChunkvickyhella_github_io=self.webpackChunkvickyhella_github_io||[]).push([[8633],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),u=a,f=d["".concat(s,".").concat(u)]||d[u]||m[u]||r;return n?i.createElement(f,o(o({ref:t},p),{},{components:n})):i.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8335:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return r},metadata:function(){return l},toc:function(){return c}});var i=n(3117),a=(n(7294),n(3905));const r={title:"Viewing and Editing Files",sidebar_position:2},o=void 0,l={unversionedId:"development-basics/linux_commands/view_edit_files",id:"development-basics/linux_commands/view_edit_files",title:"Viewing and Editing Files",description:"ls",source:"@site/docs/development-basics/linux_commands/view_edit_files.md",sourceDirName:"development-basics/linux_commands",slug:"/development-basics/linux_commands/view_edit_files",permalink:"/docs/development-basics/linux_commands/view_edit_files",draft:!1,editUrl:"https://github.com/vickyhella/vickyhella.github.io/edit/main/docs/development-basics/linux_commands/view_edit_files.md",tags:[],version:"current",lastUpdatedBy:"vickyhella",sidebarPosition:2,frontMatter:{title:"Viewing and Editing Files",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Command Operators",permalink:"/docs/development-basics/linux_commands/command_operators"},next:{title:"Copying and Moving Files",permalink:"/docs/development-basics/linux_commands/copy_move_files"}},s={},c=[{value:"<code>ls</code>",id:"ls",level:2},{value:"<code>vi/vim</code>",id:"vivim",level:2},{value:"<code>cat</code>",id:"cat",level:2}],p={toc:c},d="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"ls"},(0,a.kt)("inlineCode",{parentName:"h2"},"ls")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"ls")," is used to list files and directories."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Syntax"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"ls [options] [file|dir]\nls -lt # list by time and with long format\nls -la # list long format including hidden files\n")),(0,a.kt)("h2",{id:"vivim"},(0,a.kt)("inlineCode",{parentName:"h2"},"vi/vim")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"vi"),' command (short for "visual") provides a ',(0,a.kt)("strong",{parentName:"p"},"full-screen text editing interface")," to create, modify, and save text files."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Syntax"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"vi [options] [file]\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example usage"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'vi .\nvi file.txt        # Open "file.txt" in the vi editor for editing.\ni                  # Enter insert mode to start inserting or modifying text.\n:wq                # Save the changes and exit the editor.\n:q!                # Quit the editor without saving changes.\n/pattern           # Search for a specific pattern within the file.\n:%s/pattern/replacement/g   # Search and replace the pattern with a replacement.\nsudo vi /etc/hosts # To modify host/add IP-domain mapping\n')),(0,a.kt)("h2",{id:"cat"},(0,a.kt)("inlineCode",{parentName:"h2"},"cat")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"cat"),' command (short for "concatenate") is primarily used for displaying the contents of files on the terminal. It is a simple command that reads one or more files and prints their content sequentially.'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Syntax"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"cat [options] [file...]\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example usage"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'cat file.txt            # Display the content of "file.txt" on the terminal.\ncat file1.txt file2.txt # Concatenate the contents of "file1.txt" and "file2.txt".\ncat > newfile.txt       # Create a new file "newfile.txt" and enter content from the terminal.\ncat file.txt >> log.txt # Append the content of "file.txt" to the end of "log.txt".\n')),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"Comparing ",(0,a.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"vi")," and ",(0,a.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"cat")),(0,a.kt)("p",{parentName:"admonition"},"In summary, the ",(0,a.kt)("inlineCode",{parentName:"p"},"cat")," command is primarily used for displaying and manipulating file content on the terminal, while the ",(0,a.kt)("inlineCode",{parentName:"p"},"vi")," command is a full-featured text editor for creating and modifying text files.")))}m.isMDXComponent=!0}}]);