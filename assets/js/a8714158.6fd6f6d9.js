"use strict";(self.webpackChunkvickyhella_github_io=self.webpackChunkvickyhella_github_io||[]).push([[3472],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return h}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(t),m=i,h=p["".concat(c,".").concat(m)]||p[m]||u[m]||a;return t?r.createElement(h,o(o({ref:n},d),{},{components:t})):r.createElement(h,o({ref:n},d))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[p]="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3104:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return o},default:function(){return u},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return l}});var r=t(3117),i=(t(7294),t(3905));const a={title:"Launching a Project in a Container",sidebar_position:3},o=void 0,s={unversionedId:"development-basics/docker/launch-websites-in-containers",id:"development-basics/docker/launch-websites-in-containers",title:"Launching a Project in a Container",description:"Instead of running yarn install and yarn start on the host, you can run the following command in your project's root directory to launch a project in a container:",source:"@site/docs/development-basics/docker/launch-websites-in-containers.md",sourceDirName:"development-basics/docker",slug:"/development-basics/docker/launch-websites-in-containers",permalink:"/docs/development-basics/docker/launch-websites-in-containers",draft:!1,editUrl:"https://github.com/vickyhella/vickyhella.github.io/edit/main/docs/development-basics/docker/launch-websites-in-containers.md",tags:[],version:"current",lastUpdatedBy:"vickyhella",sidebarPosition:3,frontMatter:{title:"Launching a Project in a Container",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Dockerfile",permalink:"/docs/development-basics/docker/create-dockerfile"},next:{title:"Regular Expression",permalink:"/docs/development-basics/regex"}},c={},l=[],d={toc:l},p="wrapper";function u(e){let{components:n,...t}=e;return(0,i.kt)(p,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Instead of running ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn install")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn start")," on the host, you can run the following command in your project's root directory to launch a project in a container:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'docker run \\\n--rm \\\n-it \\\n-v $PWD:$PWD \\\n-w $PWD \\\n-p 3000:3000 \\\nnode \\\n/bin/sh -c "yarn install && yarn start -h 0.0.0.0"\n')),(0,i.kt)("p",null,"Alternatively, you can use the command below, which replaces ",(0,i.kt)("inlineCode",{parentName:"p"},"$PWD")," with ",(0,i.kt)("inlineCode",{parentName:"p"},"pwd"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'docker run \\\n--rm \\\n-it \\\n-v `pwd`:`pwd` \\\n-w `pwd` \\\n-p 3000:3000 \\\nnode \\\n/bin/sh -c "yarn install && yarn start -h 0.0.0.0"\n')),(0,i.kt)("p",null,"This command executes a Docker container and runs the ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn install && yarn start -h 0.0.0.0")," command inside it."),(0,i.kt)("p",null,"The advantage of this command is that it doesn't require you to build an image for your project first. Instead, it uses the Docker image ",(0,i.kt)("inlineCode",{parentName:"p"},"node")," as the base image, installs dependencies using Yarn, and starts a web application."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Detailed explanation"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"docker run \\\n\n# --rm: auto-removes the container when it exits\n--rm \\\n\n# -it: allocates a pseudo-TTY and keeps stdin open \n# so that you can interact with the container's command line\n# same as -t -i\n-it \\\n\n# -v: binds mount a volume\n# in this case, it mounts the current working directory ($PWD)\n# to the same directory in the container,\n# allowing the container to access your project's files\n# same as `pwd`:`pwd`\n-v $PWD:$PWD \\\n\n# -w: working directory inside the container\n# commands will be executed inside the directory given\n# in this case, it sets the working directory in the container\n# to the current working directory\n# same as `pwd`\n-w $PWD \\\n\n# -p: publishes a container's port(s) to the host\n# in this case, it maps the host's port 3000 to the container's port 3000\n-p 3000:3000 \\\n\n# node: the base image to use\nnode \\\n\n# /bin/sh -c: specifies the command to run in the container\n# It starts a shell (`/bin/sh`) and runs the yarn commands\n\n# yarn install: installs dependencies specified in `package.json`\n# yarn start -h 0.0.0.0: starts the app on port 3000, accessible from any IP address\n/bin/sh -c \"yarn install && yarn start -h 0.0.0.0\"\n\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("mdxAdmonitionTitle",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"-v")," and ",(0,i.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"-w")," flags"),(0,i.kt)("p",{parentName:"admonition"},"With the ",(0,i.kt)("inlineCode",{parentName:"p"},"-v")," flag set to ",(0,i.kt)("inlineCode",{parentName:"p"},"$PWD:$PWD"),", any files in your host's current working directory will be accessible from inside the container at the same path. "),(0,i.kt)("p",{parentName:"admonition"},"Therefore, the ",(0,i.kt)("inlineCode",{parentName:"p"},"-w")," flag is also set to ",(0,i.kt)("inlineCode",{parentName:"p"},"$PWD"),", so that the container's working directory is the same as the host's current working directory."),(0,i.kt)("p",{parentName:"admonition"},"If you switch your working directory on the host after you've started the container with the ",(0,i.kt)("inlineCode",{parentName:"p"},"-v")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"-w")," flags, the changes will be reflected inside the container as well."),(0,i.kt)("p",{parentName:"admonition"},"According to the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/reference/commandline/run/#volume"},"Docker documentation")," about this flag combination:"),(0,i.kt)("p",{parentName:"admonition"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"-v")," flag mounts the current working directory into the container. The ",(0,i.kt)("inlineCode",{parentName:"p"},"-w")," lets the command being executed inside the current working directory, by changing into the directory to the value returned by ",(0,i.kt)("inlineCode",{parentName:"p"},"pwd"),". So this combination executes the command using the container, but inside the current working directory.")))}u.isMDXComponent=!0}}]);