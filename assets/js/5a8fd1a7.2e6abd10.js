"use strict";(self.webpackChunkvickyhella_github_io=self.webpackChunkvickyhella_github_io||[]).push([[1649],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return k}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),m=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=m(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=m(n),u=a,k=c["".concat(p,".").concat(u)]||c[u]||s[u]||i;return n?r.createElement(k,l(l({ref:t},d),{},{components:n})):r.createElement(k,l({ref:t},d))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var m=2;m<i;m++)l[m]=n[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7874:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return s},frontMatter:function(){return i},metadata:function(){return o},toc:function(){return m}});var r=n(3117),a=(n(7294),n(3905));const i={title:"Copying and Moving Files",sidebar_position:3},l=void 0,o={unversionedId:"development-basics/linux_commands/copy_move_files",id:"development-basics/linux_commands/copy_move_files",title:"Copying and Moving Files",description:"cp",source:"@site/docs/development-basics/linux_commands/copy_move_files.md",sourceDirName:"development-basics/linux_commands",slug:"/development-basics/linux_commands/copy_move_files",permalink:"/docs/development-basics/linux_commands/copy_move_files",draft:!1,editUrl:"https://github.com/vickyhella/vickyhella.github.io/edit/main/docs/development-basics/linux_commands/copy_move_files.md",tags:[],version:"current",lastUpdatedBy:"vickyhella",lastUpdatedAt:1679992328,formattedLastUpdatedAt:"Mar 28, 2023",sidebarPosition:3,frontMatter:{title:"Copying and Moving Files",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Viewing and Editing Files",permalink:"/docs/development-basics/linux_commands/view_edit_files"},next:{title:"Searching for Files or Content",permalink:"/docs/development-basics/linux_commands/search_files"}},p={},m=[{value:"<code>cp</code>",id:"cp",level:2},{value:"<code>rm</code>",id:"rm",level:2},{value:"<code>mv</code>",id:"mv",level:2}],d={toc:m},c="wrapper";function s(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"cp"},(0,a.kt)("inlineCode",{parentName:"h2"},"cp")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"cp")," is used to copy files/directories to another directory. To overwrite the target directory, use the ",(0,a.kt)("inlineCode",{parentName:"p"},"-rf")," option. For more information about the available options, see ",(0,a.kt)("a",{parentName:"p",href:"https://www.rapidtables.com/code/linux/cp.html"},"cp command"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"cp [options] source destination\n")),(0,a.kt)("p",null,"Command options (partial):"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Option"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"-a"),(0,a.kt)("td",{parentName:"tr",align:null},"archive files")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"-f"),(0,a.kt)("td",{parentName:"tr",align:null},"force copy by removing the destination file if needed")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"-i"),(0,a.kt)("td",{parentName:"tr",align:null},"interactive - ask before overwrite")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"-l"),(0,a.kt)("td",{parentName:"tr",align:null},"link files instead of copy")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"-L"),(0,a.kt)("td",{parentName:"tr",align:null},"follow symbolic links")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"-n"),(0,a.kt)("td",{parentName:"tr",align:null},"no file overwrite")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"-R"),(0,a.kt)("td",{parentName:"tr",align:null},"recursive copy (including hidden files)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"-u"),(0,a.kt)("td",{parentName:"tr",align:null},"update - copy when the source is newer than the destination")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"-v"),(0,a.kt)("td",{parentName:"tr",align:null},"verbose - print informative messages")))),(0,a.kt)("h2",{id:"rm"},(0,a.kt)("inlineCode",{parentName:"h2"},"rm")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"rm")," is used to remove (delete) files. For more information about the available options, see ",(0,a.kt)("a",{parentName:"p",href:"https://www.computerhope.com/unix/urm.htm#options"},"rm command"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"rm [options] <filename>\nrm -rf <directory/filename> # force delete files/directories recursively\n")),(0,a.kt)("p",null,"Command options (partial):"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Option"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"-f, --force"),(0,a.kt)("td",{parentName:"tr",align:null},"Ignore nonexistent files, and never prompt before removing.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"-i"),(0,a.kt)("td",{parentName:"tr",align:null},"Prompt before every removal.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"-r, -R, --recursive"),(0,a.kt)("td",{parentName:"tr",align:null},"Remove directories and their contents recursively.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"-v, --verbose"),(0,a.kt)("td",{parentName:"tr",align:null},"Verbose mode; explain at all times what is being done.")))),(0,a.kt)("h2",{id:"mv"},(0,a.kt)("inlineCode",{parentName:"h2"},"mv")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"mv")," is used to move files or directories to another location."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"If the target directory is not empty, this command won't work. In this case, use ",(0,a.kt)("inlineCode",{parentName:"p"},"cp")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"rm")," as described in the section below.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"mv [options] source destination\n")),(0,a.kt)("p",null,"Command options:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"0ption"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"-f"),(0,a.kt)("td",{parentName:"tr",align:null},"force move by overwriting destination file without prompt")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"-i"),(0,a.kt)("td",{parentName:"tr",align:null},"interactive prompt before overwrite")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"-u"),(0,a.kt)("td",{parentName:"tr",align:null},"update - move when the source is newer than the destination")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"-v"),(0,a.kt)("td",{parentName:"tr",align:null},"verbose - print source and destination files")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Using rm and cp rather than mv")),(0,a.kt)("p",null,"To move a file to a directory that is not empty (i.e., move files/directory and delete the original one), in which case ",(0,a.kt)("inlineCode",{parentName:"p"},"mv")," won't work, use the ",(0,a.kt)("inlineCode",{parentName:"p"},"cp")," command together with ",(0,a.kt)("inlineCode",{parentName:"p"},"rm"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"cp -r ./backup/* ./backupArchives && rm -R ./backup/*\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The first command: copies the directory ",(0,a.kt)("inlineCode",{parentName:"p"},"./backup/*")," and the files contained to ",(0,a.kt)("inlineCode",{parentName:"p"},"./backupArchives"),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The second command: deletes the original directory ",(0,a.kt)("inlineCode",{parentName:"p"},"./backup/*"),"."))))}s.isMDXComponent=!0}}]);