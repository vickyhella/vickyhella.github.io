"use strict";(self.webpackChunkvickyhella_github_io=self.webpackChunkvickyhella_github_io||[]).push([[151],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var o=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=o.createContext({}),u=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=u(r),d=a,m=f["".concat(s,".").concat(d)]||f[d]||c[d]||n;return r?o.createElement(m,i(i({ref:t},p),{},{components:r})):o.createElement(m,i({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,i=new Array(n);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<n;u++)i[u]=r[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}f.displayName="MDXCreateElement"},1302:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c}});var o=r(7462),a=r(3366),n=(r(7294),r(3905)),i=["components"],l={title:"CAT - OmegaT",tags:["omegat","cat"]},s="CAT - OmegaT",u={permalink:"/blog/2021/11/17/omegat",editUrl:"https://github.com/vickyhella/vickyhella.github.io/blog/2021-11-17-omegat.md",source:"@site/blog/2021-11-17-omegat.md",title:"CAT - OmegaT",description:"Demand Overview",date:"2021-11-17T00:00:00.000Z",formattedDate:"November 17, 2021",tags:[{label:"omegat",permalink:"/blog/tags/omegat"},{label:"cat",permalink:"/blog/tags/cat"}],readingTime:1.59,truncated:!1,authors:[],frontMatter:{title:"CAT - OmegaT",tags:["omegat","cat"]},nextItem:{title:"Web-Based Translation Tools",permalink:"/blog/2021/09/28/tools"}},p={authorsImageUrls:[]},c=[{value:"Demand Overview",id:"demand-overview",level:2},{value:"Exploration of CATs",id:"exploration-of-cats",level:2},{value:"Advantages of OmegaT",id:"advantages-of-omegat",level:2},{value:"1. Format support:",id:"1-format-support",level:3},{value:"2. Other features:",id:"2-other-features",level:3},{value:"Painpoints of OmegaT",id:"painpoints-of-omegat",level:2},{value:"Conclusion",id:"conclusion",level:2}],f={toc:c};function d(e){var t=e.components,r=(0,a.Z)(e,i);return(0,n.kt)("wrapper",(0,o.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"demand-overview"},"Demand Overview"),(0,n.kt)("p",null,"Lately, I want to find a CAT that can work with markdown files (a file format used a lot for technical documents). I expect the CAT to support the markdown format and preserve the original formats well (as much as possible)."),(0,n.kt)("h2",{id:"exploration-of-cats"},"Exploration of CATs"),(0,n.kt)("p",null,"I tried several CATs such as Trados, Wordfast (client), Matecat, and Smartcat, and found that OmegaT works the best for markdown files, especially when I need to do English-to-Chinese translation. Moreover, OmegaT is free and open-source, making it suitable for individual translators."),(0,n.kt)("h2",{id:"advantages-of-omegat"},"Advantages of OmegaT"),(0,n.kt)("h3",{id:"1-format-support"},"1. Format support:"),(0,n.kt)("p",null,"Natively, OmegaT does not support the markdown format. However, you can install an OKapi filter plugin to make OmegaT read markdown files."),(0,n.kt)("p",null,"I tried to use the OKapi markdown filter in OmegaT and compared the formats of the source and target files. I found that the filter has the format preserved pretty well (especially compared with Trados, which changed the format a lot in indentation and line breaks)."),(0,n.kt)("h3",{id:"2-other-features"},"2. Other features:"),(0,n.kt)("p",null,"Other advantages of OmegaT are that it supports cooperation by allowing translators to push/pull projects to remote repositories, provides a lot of plugins, and uses lightweight glossary and TM formats."),(0,n.kt)("h2",{id:"painpoints-of-omegat"},"Painpoints of OmegaT"),(0,n.kt)("p",null,"The only format issue I found in OmegaT (with OKapi filter support) is that it removes or adds some spaces or line breaks somehow."),(0,n.kt)("p",null,"However, I tried to preview the target markdown files using several markdown preview tools and found that the problem does not quite change the preview effect. So I believe it wouldnt be a big problem if translators can double-check the preview effect of the target file."),(0,n.kt)("h2",{id:"conclusion"},"Conclusion"),(0,n.kt)("p",null,"I have never used OmegaT before, so I still need to get used to the editor page and find out its other features."),(0,n.kt)("p",null,"Though it does not work perfectly, yet, Im glad that I found and tried OmegaT and Im loving it."))}d.isMDXComponent=!0}}]);