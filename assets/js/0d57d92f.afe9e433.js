"use strict";(self.webpackChunkvickyhella_github_io=self.webpackChunkvickyhella_github_io||[]).push([[1475],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return s}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),m=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=m(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=m(n),s=a,f=u["".concat(c,".").concat(s)]||u[s]||p[s]||i;return n?r.createElement(f,o(o({ref:t},d),{},{components:n})):r.createElement(f,o({ref:t},d))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var m=2;m<i;m++)o[m]=n[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2763:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return c},default:function(){return s},frontMatter:function(){return l},metadata:function(){return m},toc:function(){return p}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={title:"Commands",sidebar_position:2},c=void 0,m={unversionedId:"tech/commands",id:"tech/commands",title:"Commands",description:"Introduction",source:"@site/docs/tech/commands.md",sourceDirName:"tech",slug:"/tech/commands",permalink:"/docs/tech/commands",editUrl:"https://github.com/vickyhella/vickyhella.github.io/edit/main/docs/tech/commands.md",tags:[],version:"current",lastUpdatedBy:"vickyhella",lastUpdatedAt:1666864501,formattedLastUpdatedAt:"10/27/2022",sidebarPosition:2,frontMatter:{title:"Commands",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Git",permalink:"/docs/tech/git"},next:{title:"Regular Expression",permalink:"/docs/tech/regex"}},d={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Commands",id:"commands",level:2},{value:"vi/vim",id:"vivim",level:3},{value:"ls",id:"ls",level:3},{value:"mv",id:"mv",level:3},{value:"rm",id:"rm",level:3},{value:"echo $PATH",id:"echo-path",level:3},{value:"References",id:"references",level:2}],u={toc:p};function s(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"This document includes some basic commands I learned."),(0,i.kt)("h2",{id:"commands"},"Commands"),(0,i.kt)("h3",{id:"vivim"},"vi/vim"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"vi .\nvi <filename-directory>\nsudo vi /etc/hosts # To modify host/add IP-domain mapping\n")),(0,i.kt)("h3",{id:"ls"},"ls"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ls")," is a Linux shell command that lists directory contents of files and directories."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"ls -lt # list by time and with long format\n")),(0,i.kt)("h3",{id:"mv"},"mv"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"mv")," command is used to move files and directories."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"mv [options] source destination\nmv [-f | -i | -n] [-v] source target\nmv [-f | -i | -n] [-v] source ... directory\n")),(0,i.kt)("p",null,"Command options:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"0ption"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"-f"),(0,i.kt)("td",{parentName:"tr",align:null},"force move by overwriting destination file without prompt")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"-i"),(0,i.kt)("td",{parentName:"tr",align:null},"interactive prompt before overwrite")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"-u"),(0,i.kt)("td",{parentName:"tr",align:null},"update - move when source is newer than destination")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"-v"),(0,i.kt)("td",{parentName:"tr",align:null},"verbose - print source and destination files")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"mv man"),(0,i.kt)("td",{parentName:"tr",align:null},"help manual")))),(0,i.kt)("h3",{id:"rm"},"rm"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"rm -rf <filename>\nrm -rf <directory>\n")),(0,i.kt)("h3",{id:"echo-path"},"echo $PATH"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"echo $PATH\nexport PATH=$PATH:<other-path> # or\nexport PATH=<other-path>:$PATH\nwhich <command-line-tool>\n")),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.rapidtables.com/code/linux/index.html"},"Repid TableL: Linux Commands"))))}s.isMDXComponent=!0}}]);