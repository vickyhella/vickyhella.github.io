"use strict";(self.webpackChunkvickyhella_github_io=self.webpackChunkvickyhella_github_io||[]).push([[7007],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=s(n),u=r,h=c["".concat(p,".").concat(u)]||c[u]||d[u]||i;return n?a.createElement(h,l(l({ref:t},m),{},{components:n})):a.createElement(h,l({ref:t},m))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5712:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return p},default:function(){return u},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return d}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],o={title:"Searching for Files or Content",sidebar_position:4},p=void 0,s={unversionedId:"development/linux_commands/search_files",id:"development/linux_commands/search_files",title:"Searching for Files or Content",description:"find",source:"@site/docs/development/linux_commands/search_files.md",sourceDirName:"development/linux_commands",slug:"/development/linux_commands/search_files",permalink:"/zh/docs/development/linux_commands/search_files",editUrl:"https://github.com/vickyhella/vickyhella.github.io/edit/main/docs/development/linux_commands/search_files.md",tags:[],version:"current",lastUpdatedBy:"vickyhella",lastUpdatedAt:1679051368,formattedLastUpdatedAt:"2023/3/17",sidebarPosition:4,frontMatter:{title:"Searching for Files or Content",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Copying and Moving Files",permalink:"/zh/docs/development/linux_commands/copy_move_files"},next:{title:"Git",permalink:"/zh/docs/development/git"}},m={},d=[{value:"<code>find</code>",id:"find",level:2},{value:"<code>grep</code>",id:"grep",level:2},{value:"Using <code>find</code> and <code>grep</code> in conjunction",id:"using-find-and-grep-in-conjunction",level:2},{value:"Performing Operations on the Searched Files/Content",id:"performing-operations-on-the-searched-filescontent",level:2},{value:"<code>sed</code>",id:"sed",level:3}],c={toc:d};function u(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"find"},(0,i.kt)("inlineCode",{parentName:"h2"},"find")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"find")," command is used to ",(0,i.kt)("strong",{parentName:"p"},"search for files and directories"),", and even perform operations on the files/directories found."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"find [path] [expression]\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"[path]"),": specifies the directory to start the search from. If ",(0,i.kt)("inlineCode",{parentName:"p"},"path")," is not specified, the current directory is used as the starting point.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"[expression]"),": specifies the search criteria. ",(0,i.kt)("inlineCode",{parentName:"p"},"expression")," can contain one or more tests and actions. Tests are used to ",(0,i.kt)("strong",{parentName:"p"},"match files based on different criteria"),", while actions are used to ",(0,i.kt)("strong",{parentName:"p"},"perform operations on the matched files"),"."),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"match options"),":")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"-name pattern"),": matches files based on their name. The pattern argument can be a string or a regular expression."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'# The pattern can include wildcards such as * and ?.\nfind . -name "*.txt"\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"-type type"),": matches files based on their type. The type argument can be ",(0,i.kt)("inlineCode",{parentName:"p"},"f")," for regular files, ",(0,i.kt)("inlineCode",{parentName:"p"},"d")," for directories, ",(0,i.kt)("inlineCode",{parentName:"p"},"l")," for symbolic links, and more."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# searches for all directories \n# in the current directory and its subdirectories\nfind . -type d\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"-size size"),": matches files based on their size. The size argument can be a number followed by a size suffix, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"k")," for kilobytes, ",(0,i.kt)("inlineCode",{parentName:"p"},"M")," for megabytes, and so on."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# searches for all files that are more than 1 megabyte in size\nfind . -type f -size +1M\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"-mtime days"),": matches files based on their modification time. The days argument specifies the number of days ago the file was modified."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# searches for all files that were modified more than 30 days ago\nfind . -type f -mtime +30\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"-user user"),": matches files based on their owner. The user argument specifies the username of the file owner."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Find all files in the /home directory \n# that are owned by the user john\nfind /home -user john\n")))),(0,i.kt)("ol",{parentName:"li",start:2},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"action options"),":")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"-exec command {} \\;"),": performs a command on the matched files. The ",(0,i.kt)("inlineCode",{parentName:"p"},"{}")," placeholder is replaced by the name of the matched file or directory, and ",(0,i.kt)("inlineCode",{parentName:"p"},"\\;")," marks the end of the command."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'# print the size of each file with the extension .txt\nfind . -name "*.txt" -exec du -sh {} \\;\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"-print"),": displays the files that are found by the find command."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'find . -type f -name "*.txt" -print\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"-delete"),": deletes the files that are found by the find command."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'find . -type f -name "*.log" -delete\n')))))),(0,i.kt)("h2",{id:"grep"},(0,i.kt)("inlineCode",{parentName:"h2"},"grep")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"grep")," is short for ",(0,i.kt)("inlineCode",{parentName:"p"},"global regular expression print"),". It's used to ",(0,i.kt)("strong",{parentName:"p"},"search for a specified pattern of text")," in one or more files or standard input."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"grep [options] pattern [file...]\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"pattern"),": ",(0,i.kt)("strong",{parentName:"p"},"regular expression (or string)")," that you want to search for in the specified file(s), or in standard input if no ",(0,i.kt)("inlineCode",{parentName:"p"},"file")," is provided.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"file"),": the file or files that you want to search in."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# allows searching in multiple files\ngrep apple fruits.txt vegetables.txt\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"options"),": optional command-line arguments that can modify the behavior of ",(0,i.kt)("inlineCode",{parentName:"p"},"grep"),"."))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Commonly used options"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"--include"),": restricts the grep search to only certain types of files.",(0,i.kt)("br",{parentName:"p"}),"\n","For example, you can use ",(0,i.kt)("inlineCode",{parentName:"p"},'--include="*.txt"')," to only search through those files and ignore all other files.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"--exclude"),": specifies a filename pattern that should be excluded from the grep search."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# syntax:\ngrep [OPTIONS] PATTERN --include=GLOB_PATTERN FILE_PATTERN\n\n# search for the word \"example\" in all .txt files\ngrep --include='*.txt' -r 'example' .\n\n# search for the word \"example\" in all .txt and .md files\ngrep --include='*.txt' --include='*.md' -r 'example' .\n")),(0,i.kt)("div",{parentName:"li",className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If ",(0,i.kt)("inlineCode",{parentName:"p"},"--include")," is not used, all files in the specified directories and subdirectories will be searched through. ",(0,i.kt)("inlineCode",{parentName:"p"},"--include")," helps narrow down the search.")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"-i"),": ignores case.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"-v"),": inverts the match, i.e., selects non-matching lines.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"-n")," : displays the matched lines and their line numbers."),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-A n"),": prints searched line and n lines after the result."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-B n"),": prints searched line and n line before the result."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-C n"),": prints searched line and n lines after before the result."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"-w"),": matches the whole word.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"-r"),": searches recursively through directories and their subdirectories."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# include all subdirectories in a search\ngrep -r pattern *\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"-e expression"),": specifies the pattern to search for. Can be used multiple times."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# lines that contain either pattern1 or pattern2 in file.txt\ngrep -e pattern1 -e pattern2 file.txt\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"-c"),": prints only a count of matching lines.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"-l"),": prints only the list of filenames only.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"-f file"),": takes patterns from a file, one pattern per line."))),(0,i.kt)("h2",{id:"using-find-and-grep-in-conjunction"},"Using ",(0,i.kt)("inlineCode",{parentName:"h2"},"find")," and ",(0,i.kt)("inlineCode",{parentName:"h2"},"grep")," in conjunction"),(0,i.kt)("p",null,"To search for specific content in specific files, you can use ",(0,i.kt)("inlineCode",{parentName:"p"},"find")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"grep")," in conjuction as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'find /path/to/search -name "*.txt" -exec grep "search_pattern" {} \\;\n')),(0,i.kt)("p",null,"This command:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"searches for all ",(0,i.kt)("inlineCode",{parentName:"li"},".txt")," files in ",(0,i.kt)("inlineCode",{parentName:"li"},"/path/to/search"),"."),(0,i.kt)("li",{parentName:"ol"},"searches for the text string ",(0,i.kt)("inlineCode",{parentName:"li"},"search_pattern")," within each of those files.")),(0,i.kt)("h2",{id:"performing-operations-on-the-searched-filescontent"},"Performing Operations on the Searched Files/Content"),(0,i.kt)("p",null,"You can use ",(0,i.kt)("inlineCode",{parentName:"p"},"find")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"grep")," to search for what you want, but eventually you might want to perform operations on what is searched."),(0,i.kt)("p",null,"To pass the searched results to the operation command, use ",(0,i.kt)("inlineCode",{parentName:"p"},"|")," to pipe the output of ",(0,i.kt)("inlineCode",{parentName:"p"},"grep")," to the operation command."),(0,i.kt)("h3",{id:"sed"},(0,i.kt)("inlineCode",{parentName:"h3"},"sed")),(0,i.kt)("p",null,"Replaces all ",(0,i.kt)("inlineCode",{parentName:"p"},"old_string")," with ",(0,i.kt)("inlineCode",{parentName:"p"},"new_string")," in the searched content."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'find /path/to/search -name "*.txt" -exec grep "search_pattern" {} \\; | sed \'s/old_string/new_string/g\'\n')))}u.isMDXComponent=!0}}]);