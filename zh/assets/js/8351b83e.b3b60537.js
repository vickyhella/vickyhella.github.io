"use strict";(self.webpackChunkvickyhella_github_io=self.webpackChunkvickyhella_github_io||[]).push([[8469],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5916:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={title:"Bash",sidebar_position:1},s=void 0,c={unversionedId:"programming-languages/bash/bash",id:"programming-languages/bash/bash",title:"Bash",description:"Introduction",source:"@site/docs/programming-languages/bash/bash.md",sourceDirName:"programming-languages/bash",slug:"/programming-languages/bash/",permalink:"/zh/docs/programming-languages/bash/",editUrl:"https://github.com/vickyhella/vickyhella.github.io/edit/main/docs/programming-languages/bash/bash.md",tags:[],version:"current",lastUpdatedBy:"vickyhella",sidebarPosition:1,frontMatter:{title:"Bash",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Improving Efficiency",permalink:"/zh/docs/development-basics/efficiency"},next:{title:"Python",permalink:"/zh/docs/programming-languages/python/"}},p={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Define variables",id:"define-variables",level:2},{value:"<code>echo</code> variables",id:"echo-variables",level:2},{value:"<code>export</code> variables",id:"export-variables",level:2},{value:"<code>if</code> statement",id:"if-statement",level:2}],m={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"This page documents bash syntax that I've learned."),(0,i.kt)("h2",{id:"define-variables"},"Define variables"),(0,i.kt)("p",null,"In Bash, you can define a variable by using the following syntax:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'variable_name=value\n# Example:\nname="John"\n')),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"There should be no spaces around the equals (=) sign."))),(0,i.kt)("p",null,"Variables in Bash are not typed, so you don't need to specify the data type. They can hold strings, numbers, or any other type of data."),(0,i.kt)("h2",{id:"echo-variables"},(0,i.kt)("inlineCode",{parentName:"h2"},"echo")," variables"),(0,i.kt)("p",null,"To access the value of a variable, you can use the variable name preceded by the dollar sign ($):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"echo $name\n")),(0,i.kt)("p",null,"You can also assign the output of a command to a variable using command substitution:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"current_date=$(date)\n")),(0,i.kt)("p",null,"In this example, the output of the date command is assigned to the current_date variable."),(0,i.kt)("h2",{id:"export-variables"},(0,i.kt)("inlineCode",{parentName:"h2"},"export")," variables"),(0,i.kt)("p",null,"Variables in Bash are by default local to the current shell or script. If you want to export a variable to be accessible by other scripts or programs, you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"export")," command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'export MY_VARIABLE_1\nexport MY_VARIABLE="Hello, World!"\n')),(0,i.kt)("p",null,"It can then be imported. For an example of how a Bash variable is imported and used in a Python script, see ",(0,i.kt)("a",{parentName:"p",href:"/zh/docs/programming-languages/python/import-bash-variables"},"Importing Bash Variables"),"."),(0,i.kt)("h2",{id:"if-statement"},(0,i.kt)("inlineCode",{parentName:"h2"},"if")," statement"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'if [[ "$fname" == "a.txt" || "$fname" == "c.txt" ]]; then \n  echo Hello # a command to run if the condition is met\nfi\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"More info"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"=="),": if ",(0,i.kt)("inlineCode",{parentName:"li"},"$fname")," equals to ",(0,i.kt)("inlineCode",{parentName:"li"},"a.txt")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"c txt")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"\\\\"),": True if either expression1 or expression2 is true."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"&&"),": True if both expression1 and expression2 are true.")))}d.isMDXComponent=!0}}]);