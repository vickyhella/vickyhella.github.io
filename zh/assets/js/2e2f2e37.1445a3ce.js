"use strict";(self.webpackChunkvickyhella_github_io=self.webpackChunkvickyhella_github_io||[]).push([[9817],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(h,l(l({ref:t},p),{},{components:n})):a.createElement(h,l({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},927:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return o},metadata:function(){return i},toc:function(){return c}});var a=n(3117),r=(n(7294),n(3905));const o={title:"Updating Algolia Records",sidebar_position:3},l=void 0,i={unversionedId:"website-management/algolia-search",id:"website-management/algolia-search",title:"Updating Algolia Records",description:"This document describes how to generate and upload your search records to Algolia. You can follow the instructions here after updating the docs, or when you found that the search didn't return the results as needed.",source:"@site/docs/website-management/algolia-search.md",sourceDirName:"website-management",slug:"/website-management/algolia-search",permalink:"/zh/docs/website-management/algolia-search",draft:!1,editUrl:"https://github.com/vickyhella/vickyhella.github.io/edit/main/docs/website-management/algolia-search.md",tags:[],version:"current",lastUpdatedBy:"vickyhella",lastUpdatedAt:1696820141,formattedLastUpdatedAt:"2023\u5e7410\u67089\u65e5",sidebarPosition:3,frontMatter:{title:"Updating Algolia Records",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Web Hosting",permalink:"/zh/docs/website-management/web-hosting"},next:{title:"Dealing with Broken Links",permalink:"/zh/docs/website-management/broken-links"}},s={},c=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"Preparing the files needed",id:"preparing-the-files-needed",level:3},{value:"Updating records",id:"updating-records",level:3},{value:"Viewing the search data",id:"viewing-the-search-data",level:2},{value:"References",id:"references",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This document describes how to generate and upload your search records to Algolia. You can follow the instructions here after updating the docs, or when you found that the search didn't return the results as needed."),(0,r.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"You need to install:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Docker"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/stedolan/jq/wiki/Installation"},"jq"),": a lightweight command-line JSON processer. To quickly install it on Mac, run the command below:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"brew install jq\n")))),(0,r.kt)("h3",{id:"preparing-the-files-needed"},"Preparing the files needed"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a folder called ",(0,r.kt)("inlineCode",{parentName:"p"},"algolia-project")," in any location you want.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In this folder, create a file called ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," with the following content:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"APPLICATION_ID=<YOUR_APP_ID>\nAPI_KEY=<YOUR_API_KEY>\n")),(0,r.kt)("p",{parentName:"li"},"Replace ",(0,r.kt)("inlineCode",{parentName:"p"},"<YOUR_APP_ID>")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"<YOUR_API_KEY>")," with the actual ones:")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create another file called ",(0,r.kt)("inlineCode",{parentName:"p"},"config.json")," with the following content:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n"index_name": "<index-name>",\n"sitemap_urls": ["http://<example-url>/sitemap.xml"],\n"start_urls": ["http://<example-url>/"],\n"selectors": {\n    "lvl0": "",\n    "lvl1": "article h1",\n    "lvl2": "article h2",\n    "lvl3": "article h3",\n    "lvl4": "article h4",\n    "lvl5": "article h5"\n},\n"custom_settings": {\n    "attributesForFaceting": [\n    "language",\n    "version",\n    "type",\n    "docusaurus_tag"\n    ]\n}\n}\n')),(0,r.kt)("p",{parentName:"li"},"Replace ",(0,r.kt)("inlineCode",{parentName:"p"},"<index-name>")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"<example-url>")," with the actual ones."),(0,r.kt)("admonition",{parentName:"li",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"After this, your ",(0,r.kt)("inlineCode",{parentName:"p"},"algolia-project")," folder should have two files: ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"config.json"),".")))),(0,r.kt)("h3",{id:"updating-records"},"Updating records"),(0,r.kt)("p",null,"Go to the directory (",(0,r.kt)("inlineCode",{parentName:"p"},"algolia-project"),") that contains the ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"config.json")," files and run the command below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'docker run -it --env-file=.env -e "CONFIG=$(cat ./config.json | jq -r tostring)" algolia/docsearch-scraper\n')),(0,r.kt)("p",null,"After the command is run successfully, it will output the number of records generated as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"> DocSearch: https://example-url-1/ 0 records)\n> DocSearch: https://example-url-2/ 1 records)\n> DocSearch: https://example-url-3/ 4 records)\n> DocSearch: https://example-url-4/ 4 records)\n\nNb hits: 9\n")),(0,r.kt)("p",null,"After this, your records should be uploaded and updated. You can wait for a while and then search the newly uploaded records on your website for verification."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"It might take several minutes for the records to be uploaded.")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Uploading Algolia records is simply done from the command-line tool and doesn't require a console login."),(0,r.kt)("p",{parentName:"admonition"},"If you want to view the search trend and get statistics on the top search keywords, you can log into the Algolia console to have a look (described in the section below).")),(0,r.kt)("h2",{id:"viewing-the-search-data"},"Viewing the search data"),(0,r.kt)("p",null,"To get an insight of your users' search behaviors:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Log in to your ",(0,r.kt)("a",{parentName:"li",href:"https://dashboard.algolia.com/"},"Algolia console"),"."),(0,r.kt)("li",{parentName:"ol"},"Click the ",(0,r.kt)("strong",{parentName:"li"},"Search")," icon in the left navigation bar."),(0,r.kt)("li",{parentName:"ol"},"Click ",(0,r.kt)("strong",{parentName:"li"},"Analytics")," under ",(0,r.kt)("strong",{parentName:"li"},"OBSERVE"),".")),(0,r.kt)("p",null,"On the page displayed, you can see an overview of the search data as well as the metrics below:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Total Users"),(0,r.kt)("li",{parentName:"ul"},"Total Searches"),(0,r.kt)("li",{parentName:"ul"},"No Results Rate"),(0,r.kt)("li",{parentName:"ul"},"Click-through Rate"),(0,r.kt)("li",{parentName:"ul"},"Conversion Rate"),(0,r.kt)("li",{parentName:"ul"},"No Click Rate"),(0,r.kt)("li",{parentName:"ul"},"Top Searches"),(0,r.kt)("li",{parentName:"ul"},"Top Results"),(0,r.kt)("li",{parentName:"ul"},"Searches Without Results")),(0,r.kt)("h2",{id:"references"},"References"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docsearch.algolia.com/docs/legacy/run-your-own/"},"Run Your Own"))))}d.isMDXComponent=!0}}]);