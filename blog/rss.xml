<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Vicky's Space Blog</title>
        <link>https://vickyhella.github.io/blog</link>
        <description>Vicky's Space Blog</description>
        <lastBuildDate>Wed, 17 Nov 2021 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <item>
            <title><![CDATA[CAT - OmegaT]]></title>
            <link>https://vickyhella.github.io/blog/2021/11/17/omegat</link>
            <guid>/2021/11/17/omegat</guid>
            <pubDate>Wed, 17 Nov 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Demand Overview]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_mojV" id="demand-overview">Demand Overview<a class="hash-link" href="#demand-overview" title="Direct link to heading">​</a></h2><p>Lately, I want to find a CAT that can work with markdown files (a file format used a lot for technical documents). I expect the CAT to support the markdown format and preserve the original formats well (as much as possible).</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="exploration-of-cats">Exploration of CATs<a class="hash-link" href="#exploration-of-cats" title="Direct link to heading">​</a></h2><p>I tried several CATs such as Trados, Wordfast (client), Matecat, and Smartcat, and found that OmegaT works the best for markdown files, especially when I need to do English-to-Chinese translation. Moreover, OmegaT is free and open-source, making it suitable for individual translators.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="advantages-of-omegat">Advantages of OmegaT<a class="hash-link" href="#advantages-of-omegat" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_mojV" id="1-format-support">1. Format support:<a class="hash-link" href="#1-format-support" title="Direct link to heading">​</a></h3><p>Natively, OmegaT does not support the markdown format. However, you can install an OKapi filter plugin to make OmegaT read markdown files.</p><p>I tried to use the OKapi markdown filter in OmegaT and compared the formats of the source and target files. I found that the filter has the format preserved pretty well (especially compared with Trados, which changed the format a lot in indentation and line breaks).</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="2-other-features">2. Other features:<a class="hash-link" href="#2-other-features" title="Direct link to heading">​</a></h3><p>Other advantages of OmegaT are that it supports cooperation by allowing translators to push/pull projects to remote repositories, provides a lot of plugins, and uses lightweight glossary and TM formats.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="painpoints-of-omegat">Painpoints of OmegaT<a class="hash-link" href="#painpoints-of-omegat" title="Direct link to heading">​</a></h2><p>The only format issue I found in OmegaT (with OKapi filter support) is that it removes or adds some spaces or line breaks somehow.</p><p>However, I tried to preview the target markdown files using several markdown preview tools and found that the problem does not quite change the preview effect. So I believe it wouldnt be a big problem if translators can double-check the preview effect of the target file.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="conclusion">Conclusion<a class="hash-link" href="#conclusion" title="Direct link to heading">​</a></h2><p>I have never used OmegaT before, so I still need to get used to the editor page and find out its other features.</p><p>Though it does not work perfectly, yet, Im glad that I found and tried OmegaT and Im loving it.</p>]]></content:encoded>
            <category>omegat</category>
            <category>cat</category>
        </item>
        <item>
            <title><![CDATA[Web-Based Translation Tools]]></title>
            <link>https://vickyhella.github.io/blog/2021/09/28/tools</link>
            <guid>/2021/09/28/tools</guid>
            <pubDate>Tue, 28 Sep 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Overview]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_mojV" id="overview">Overview<a class="hash-link" href="#overview" title="Direct link to heading">​</a></h2><p>Sometimes translators need to translate on web-based translation platforms (such as TransStudio Online). However, these platforms might not always offer satisfying services (such as real-time grammar/spell check) or do not support them at all. The following are several lite tools that I use a lot and highly recommend. They help improve the quality and accuracy of my deliverables.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="ready-to-use-tools">Ready-to-Use Tools<a class="hash-link" href="#ready-to-use-tools" title="Direct link to heading">​</a></h2><ol><li>Grammarly (free of charge)</li></ol><ul><li>Client: Chrome, Windows</li><li>Feature: checks grammar and spelling after your translation is complete.</li></ul><ol start="2"><li>LanguageTool (free of charge)</li></ol><ul><li>Client: Chrome</li><li>Feature: checks grammar and spelling in real time when youre typing in a text box.</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="custom-tools">Custom Tools<a class="hash-link" href="#custom-tools" title="Direct link to heading">​</a></h2><p>Soon I realized these two tools are not enough, as they cannot detect the forbidden words (terms in the blocklist) in my translation. To tackle this problem, I found another tool and customize it. It works, though its not very convenient.</p><ol start="3"><li>Highlight This (free of charge)</li></ol><ul><li><p>Client: Chrome</p></li><li><p>Feature: highlights custom forbidden words.</p></li><li><p>Instructions:</p><ol><li>Add the forbidden words to the Highlight This Chrome extension.</li><li>Copy your translation to Google Docs.</li><li>Find the highlighted forbidden words in Google Docs.</li><li>Revise the forbidden words in your translation.</li></ol></li></ul><p>This method is not very convenient, but I havent found a better way.</p><p>You can use this method if you need to ensure that no forbidden words show up in your deliverables.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="to-be-continued">To Be Continued<a class="hash-link" href="#to-be-continued" title="Direct link to heading">​</a></h2><p>I havent found a way to ensure the consistency of my translation when translating on a web-based platform. If I managed to figure out how to do that, I will add the method here later.</p>]]></content:encoded>
            <category>grammarly</category>
            <category>languagetool</category>
            <category>highlight this</category>
        </item>
        <item>
            <title><![CDATA[Introduction]]></title>
            <link>https://vickyhella.github.io/blog/2021/08/26/welcome</link>
            <guid>/2021/08/26/welcome</guid>
            <pubDate>Thu, 26 Aug 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[This section is to record my learning progress. I will post things that I have been learning or found here. It could be about translation, English learning, product management, some new tools or apps Ive learned, or just anything.]]></description>
            <content:encoded><![CDATA[<p>This section is to record my learning progress. I will post things that I have been learning or found here. It could be about translation, English learning, product management, some new tools or apps Ive learned, or just anything.</p><p>Im always open to learning new things, so everything is possible to show up here. Please dont be surprised if some things totally irrelevant are posted here.</p>]]></content:encoded>
            <category>intro</category>
            <category>hello</category>
        </item>
    </channel>
</rss>